CS313-ACE-3 VERSION HISTORY

================================================================================

Version 0.0: Virtual Memory Manager

Commenced: 21/01/2015
Finished: 28/01/2015

--------------------------------------------------------------------------------

	v0.1 - 21/01/2015

		To begin with, the implementation of extracting a page number and offset
		from a given logical address is to be added. The creation of the class
		'LogicalAddress' was implemented to achieve this. In addition, the JUnit
		testing class 'LogicalAddressTest' was also created to ensure that the
		method of extracting page number and offset was correct.

	v0.2 - 22/01/2015 - 26/01/2015

		The page table and physical memory were created, along with the body of
		the memory manager. The system was now able to simulate the translation
		and reading of various addresses without the use of the TLB, which was
		to come later.

	v0.3 - 27/01/2015

		The TLB is implemented with a FIFO algorithm, while a Random algorithm
		was also implemented, it is yet to be tested. The TLB has been added to
		the simulator, so now we have a basic virtual memory manager created.
		There were issues with adding the TLB to the manager, due to how it was
		structured in its absence, this has since been fixed however.

	v0.4 - 28/01/2015

		Added the least recently used replacement policy for the TLB. This is
		the one I have the most dislike of how I implemented it, since it was
		required to be updated during TLB hits, when the other policies could
		ignore them. I will be looking for ways to fix this, although I think it
		will be a low priority.
	
	v1.0 - 28/01/2015
	
		I feel I have safely met the base specifications of the assignment. I am
		now beginning work on refining the manager to allow for a more flexible
		system. The class Input.java is such an example, its purpose being to
		handle any user input. 
		
